
;; ========================================================================
;; Règles de dialogue générées automatiquement (ne modifiez pas ce fichier)
;; ========================================================================

(deffacts YADEGLOB::initial-facts
   (tache0))

(defglobal YADEGLOB ?*timeout* = "Hey, are you sleeping ?")
(defglobal YADEGLOB ?*openning* = "Hi, what can I do for you ?")
(defglobal YADEGLOB ?*nogranule* = "Sorry, I didn't understand. Can you reformulate please ?")
(defglobal YADEGLOB ?*noresponse* = "Sorry, I don't know what to say. I do not have enough dialogue rules...")

(defglobal YADE ?*salience-idm45712587846048* = 0)
(defglobal YADE ?*salience-idm45712587829328* = 0)
(defglobal YADE ?*salience-idm45712587733168* = 0)
(defglobal YADE ?*salience-idm45712587727760* = 0)
(defglobal YADE ?*salience-idm45712587722352* = 0)
(defglobal YADE ?*salience-idm45712587716944* = 0)
(defglobal YADE ?*salience-idm45712587711536* = 0)
(defglobal YADE ?*salience-idm45712587707216* = 0)
(defglobal YADE ?*salience-idm45712587702288* = 0)
(defglobal YADE ?*salience-idm45712587697024* = 0)
(defglobal YADE ?*salience-idm45712587691680* = 0)
(defglobal YADE ?*salience-idm45712587650192* = 0)
(defglobal YADE ?*salience-idm45712587616960* = 0)
(defglobal YADE ?*salience-idm45712587612032* = 0)
(defglobal YADE ?*salience-idm45712587607088* = 0)
(defglobal YADE ?*salience-idm45712587602144* = 0)
(defglobal YADE ?*salience-idm45712587597200* = 0)
(defglobal YADE ?*salience-idm45712587592256* = 0)
(defglobal YADE ?*salience-idm45712587587376* = 0)
(defglobal YADE ?*salience-idm45712587582432* = 0)

(defrule YADERULE::idm45712587846048 "hello world rule"
   (declare (salience ?*salience-idm45712587846048*))
   (contexte (indice ?indice) (pile-contextes ?contexte $?))
   ?gr-idm45712587857824 <- (granule (ident ?idm45712587857824) (indice ?indice-idm45712587857824&?indice) (lconcept openning $?))
   (not (used (ident ?idm45712587857824)))
   (not (fired ?indice idm45712587846048 =(string-to-field (getNumber ?idm45712587857824))))
   (poids-granule (ident ?idm45712587857824) (poids ?idm45712587857824-poids))
   (test (bind ?*salience-idm45712587846048* (+ 400 1 ?idm45712587857824-poids)))
   =>
   (assert (fired ?indice idm45712587846048 (string-to-field (getNumber ?idm45712587857824))))
   (bind ?liste-id (create$ (string-to-field (getNumber ?idm45712587857824))))
   (writeLog (format nil "### Standalone rule (hello world rule) granules=(%s) salience=%d id=%s" (implode$ ?liste-id) ?*salience-idm45712587846048* idm45712587846048))
   (repondre "Hello world.")
   (calcule-poids-des-granules))

(defrule YADERULE::idm45712587829328 "related word rule"
   (declare (salience ?*salience-idm45712587829328*))
   (contexte (indice ?indice) (pile-contextes ?contexte $?))
   ?gr-idm45712587826400 <- (granule (ident ?idm45712587826400) (indice ?indice-idm45712587826400&?indice) (lconcept relation $?))
   (not (used (ident ?idm45712587826400)))
   (not (fired ?indice idm45712587829328 =(string-to-field (getNumber ?idm45712587826400))))
   (poids-granule (ident ?idm45712587826400) (poids ?idm45712587826400-poids))
   (test (bind ?*salience-idm45712587829328* (+ 400 1 ?idm45712587826400-poids)))
   =>
   (assert (fired ?indice idm45712587829328 (string-to-field (getNumber ?idm45712587826400))))
   (bind ?liste-id (create$ (string-to-field (getNumber ?idm45712587826400))))
   (writeLog (format nil "### Standalone rule (related word rule) granules=(%s) salience=%d id=%s" (implode$ ?liste-id) ?*salience-idm45712587829328* idm45712587829328))
   (repondre "Yes sure, I will try my best, I am thinking. [nao:getRelation]")
   (calcule-poids-des-granules))

(defrule YADERULE::idm45712587733168 "color rule"
   (declare (salience ?*salience-idm45712587733168*))
   (contexte (indice ?indice) (pile-contextes ?contexte $?))
   ?gr-idm45712587730496 <- (granule (ident ?idm45712587730496) (indice ?indice-idm45712587730496&?indice) (lconcept asking $?))
   (not (used (ident ?idm45712587730496)))
   ?gr-idm45712587729760 <- (granule (ident ?idm45712587729760) (indice ?indice-idm45712587729760&?indice) (lconcept color $?))
   (liaison (idpere ?idm45712587730496) (idfils ?idm45712587729760))
   (not (used (ident ?idm45712587729760)))
   (test (differents$ (create$ ?gr-idm45712587730496 ?gr-idm45712587729760)))
   (not (fired ?indice idm45712587733168 =(string-to-field (getNumber ?idm45712587730496)) =(string-to-field (getNumber ?idm45712587729760))))
   (poids-granule (ident ?idm45712587730496) (poids ?idm45712587730496-poids))
   (test (bind ?*salience-idm45712587733168* (+ 400 2 ?idm45712587730496-poids)))
   =>
   (assert (fired ?indice idm45712587733168 (string-to-field (getNumber ?idm45712587730496)) (string-to-field (getNumber ?idm45712587729760))))
   (bind ?liste-id (create$ (string-to-field (getNumber ?idm45712587730496)) (string-to-field (getNumber ?idm45712587729760))))
   (writeLog (format nil "### Standalone rule (color rule) granules=(%s) salience=%d id=%s" (implode$ ?liste-id) ?*salience-idm45712587733168* idm45712587733168))
   (repondre "The wall is a")
   (repondre (get-color))
   (repondre "one.")
   (calcule-poids-des-granules))

(defrule YADERULE::idm45712587727760 "distance rule"
   (declare (salience ?*salience-idm45712587727760*))
   (contexte (indice ?indice) (pile-contextes ?contexte $?))
   ?gr-idm45712587725088 <- (granule (ident ?idm45712587725088) (indice ?indice-idm45712587725088&?indice) (lconcept asking $?))
   (not (used (ident ?idm45712587725088)))
   ?gr-idm45712587724352 <- (granule (ident ?idm45712587724352) (indice ?indice-idm45712587724352&?indice) (lconcept distance $?))
   (liaison (idpere ?idm45712587725088) (idfils ?idm45712587724352))
   (not (used (ident ?idm45712587724352)))
   (test (differents$ (create$ ?gr-idm45712587725088 ?gr-idm45712587724352)))
   (not (fired ?indice idm45712587727760 =(string-to-field (getNumber ?idm45712587725088)) =(string-to-field (getNumber ?idm45712587724352))))
   (poids-granule (ident ?idm45712587725088) (poids ?idm45712587725088-poids))
   (test (bind ?*salience-idm45712587727760* (+ 400 2 ?idm45712587725088-poids)))
   =>
   (assert (fired ?indice idm45712587727760 (string-to-field (getNumber ?idm45712587725088)) (string-to-field (getNumber ?idm45712587724352))))
   (bind ?liste-id (create$ (string-to-field (getNumber ?idm45712587725088)) (string-to-field (getNumber ?idm45712587724352))))
   (writeLog (format nil "### Standalone rule (distance rule) granules=(%s) salience=%d id=%s" (implode$ ?liste-id) ?*salience-idm45712587727760* idm45712587727760))
   (repondre "It's")
   (repondre (get-distance))
   (repondre ".")
   (calcule-poids-des-granules))

(defrule YADERULE::idm45712587722352 "command to walk"
   (declare (salience ?*salience-idm45712587722352*))
   (contexte (indice ?indice) (pile-contextes ?contexte $?))
   ?gr-idm45712587719680 <- (granule (ident ?idm45712587719680) (indice ?indice-idm45712587719680&?indice) (lconcept order $?))
   (not (used (ident ?idm45712587719680)))
   ?gr-idm45712587718944 <- (granule (ident ?idm45712587718944) (indice ?indice-idm45712587718944&?indice) (lconcept walking $?))
   (liaison (idpere ?idm45712587719680) (idfils ?idm45712587718944))
   (not (used (ident ?idm45712587718944)))
   (test (differents$ (create$ ?gr-idm45712587719680 ?gr-idm45712587718944)))
   (not (fired ?indice idm45712587722352 =(string-to-field (getNumber ?idm45712587719680)) =(string-to-field (getNumber ?idm45712587718944))))
   (poids-granule (ident ?idm45712587719680) (poids ?idm45712587719680-poids))
   (test (bind ?*salience-idm45712587722352* (+ 400 2 ?idm45712587719680-poids)))
   =>
   (assert (fired ?indice idm45712587722352 (string-to-field (getNumber ?idm45712587719680)) (string-to-field (getNumber ?idm45712587718944))))
   (bind ?liste-id (create$ (string-to-field (getNumber ?idm45712587719680)) (string-to-field (getNumber ?idm45712587718944))))
   (writeLog (format nil "### Standalone rule (command to walk) granules=(%s) salience=%d id=%s" (implode$ ?liste-id) ?*salience-idm45712587722352* idm45712587722352))
   (repondre "Ok, I'm walking. [nao:walkForward]")
   (calcule-poids-des-granules))

(defrule YADERULE::idm45712587716944 "command to stop"
   (declare (salience ?*salience-idm45712587716944*))
   (contexte (indice ?indice) (pile-contextes ?contexte $?))
   ?gr-idm45712587714272 <- (granule (ident ?idm45712587714272) (indice ?indice-idm45712587714272&?indice) (lconcept order $?))
   (not (used (ident ?idm45712587714272)))
   ?gr-idm45712587713536 <- (granule (ident ?idm45712587713536) (indice ?indice-idm45712587713536&?indice) (lconcept stopping $?))
   (liaison (idpere ?idm45712587714272) (idfils ?idm45712587713536))
   (not (used (ident ?idm45712587713536)))
   (test (differents$ (create$ ?gr-idm45712587714272 ?gr-idm45712587713536)))
   (not (fired ?indice idm45712587716944 =(string-to-field (getNumber ?idm45712587714272)) =(string-to-field (getNumber ?idm45712587713536))))
   (poids-granule (ident ?idm45712587714272) (poids ?idm45712587714272-poids))
   (test (bind ?*salience-idm45712587716944* (+ 400 2 ?idm45712587714272-poids)))
   =>
   (assert (fired ?indice idm45712587716944 (string-to-field (getNumber ?idm45712587714272)) (string-to-field (getNumber ?idm45712587713536))))
   (bind ?liste-id (create$ (string-to-field (getNumber ?idm45712587714272)) (string-to-field (getNumber ?idm45712587713536))))
   (writeLog (format nil "### Standalone rule (command to stop) granules=(%s) salience=%d id=%s" (implode$ ?liste-id) ?*salience-idm45712587716944* idm45712587716944))
   (repondre "OK, I'm stopping. [nao:stop]")
   (calcule-poids-des-granules))

(defrule YADERULE::idm45712587711536 "timeout rule"
   (declare (salience ?*salience-idm45712587711536*))
   (contexte (indice ?indice) (pile-contextes ?contexte $?))
   (input (chaine ?texte) (indice ?indice))
   (test (str-index (lowcase "_timeout_") ?texte))
   (not (fired ?indice idm45712587711536))
   (test (bind ?*salience-idm45712587711536* (+ 400 1)))
   =>
   (assert (fired ?indice idm45712587711536))
   (bind ?liste-id (create$))
   (writeLog (format nil "### Standalone rule (timeout rule) granules=(%s) salience=%d id=%s" (implode$ ?liste-id) ?*salience-idm45712587711536* idm45712587711536))
   (repondre "Hey, are you sleeping?")
   (calcule-poids-des-granules))

(defrule YADERULE::idm45712587707216 "rigth-left question"
   (declare (salience ?*salience-idm45712587707216*))
   (contexte (indice ?indice) (pile-contextes ?contexte $?) (pile-regles ~idm45712587707216 $?))
   (input (chaine ?texte) (indice ?indice))
   (test (str-index (lowcase "right_left_question") ?texte))
   (not (fired ?indice idm45712587707216))
   (test (bind ?*salience-idm45712587707216* (+ 300 1)))
   =>
   (assert (fired ?indice idm45712587707216))
   (bind ?liste-id (create$))
   (writeLog (format nil "### Initiative rule (rigth-left question) granules=(%s) salience=%d id=%s" (implode$ ?liste-id) ?*salience-idm45712587707216* idm45712587707216))
   (empiler-contexte idm45712587707216)
   (pop-focus)
   (repondre "Oh, there's a wall in front of me.")
   (repondre "Should I go on my right or on my left ? [timeout:5]")
   (calcule-poids-des-granules))

(defrule YADERULE::idm45712587702288 "rigth choice"
   (declare (salience ?*salience-idm45712587702288*))
   (contexte (indice ?indice) (pile-contextes ?contexte $?) (pile-regles idm45712587707216 $?))
   ?gr-idm45712587699360 <- (granule (ident ?idm45712587699360) (indice ?indice-idm45712587699360&?indice) (lconcept right $?))
   (not (used (ident ?idm45712587699360)))
   (not (fired ?indice idm45712587702288 =(string-to-field (getNumber ?idm45712587699360))))
   (poids-granule (ident ?idm45712587699360) (poids ?idm45712587699360-poids))
   (test (bind ?*salience-idm45712587702288* (+ 200 1 ?idm45712587699360-poids)))
   =>
   (assert (fired ?indice idm45712587702288 (string-to-field (getNumber ?idm45712587699360))))
   (bind ?liste-id (create$ (string-to-field (getNumber ?idm45712587699360))))
   (writeLog (format nil "### Nested terminal rule (rigth choice) granules=(%s) salience=%d id=%s" (implode$ ?liste-id) ?*salience-idm45712587702288* idm45712587702288))
   (repondre "OK, let's go to the right.")
   (depiler-contexte)
   (calcule-poids-des-granules))

(defrule YADERULE::idm45712587697024 "left choice"
   (declare (salience ?*salience-idm45712587697024*))
   (contexte (indice ?indice) (pile-contextes ?contexte $?) (pile-regles idm45712587707216 $?))
   ?gr-idm45712587694096 <- (granule (ident ?idm45712587694096) (indice ?indice-idm45712587694096&?indice) (lconcept left $?))
   (not (used (ident ?idm45712587694096)))
   (not (fired ?indice idm45712587697024 =(string-to-field (getNumber ?idm45712587694096))))
   (poids-granule (ident ?idm45712587694096) (poids ?idm45712587694096-poids))
   (test (bind ?*salience-idm45712587697024* (+ 200 1 ?idm45712587694096-poids)))
   =>
   (assert (fired ?indice idm45712587697024 (string-to-field (getNumber ?idm45712587694096))))
   (bind ?liste-id (create$ (string-to-field (getNumber ?idm45712587694096))))
   (writeLog (format nil "### Nested terminal rule (left choice) granules=(%s) salience=%d id=%s" (implode$ ?liste-id) ?*salience-idm45712587697024* idm45712587697024))
   (repondre "OK, let's go to the left.")
   (depiler-contexte)
   (calcule-poids-des-granules))

(defrule YADERULE::idm45712587691680 "no direction"
   (declare (salience ?*salience-idm45712587691680*))
   (contexte (indice ?indice) (pile-contextes ?contexte $?) (pile-regles idm45712587707216 $?))
   (not (and (granule (ident ?idm45712587688832) (indice ?indice) (offres $? direction $?))))
   (not (fired ?indice idm45712587691680))
   (test (bind ?*salience-idm45712587691680* (+ 400 1)))
   =>
   (assert (fired ?indice idm45712587691680))
   (bind ?liste-id (create$))
   (writeLog (format nil "### Nested non terminal rule (no direction) granules=(%s) salience=%d id=%s" (implode$ ?liste-id) ?*salience-idm45712587691680* idm45712587691680))
   (repondre "Please answer me: right or left ? [timeout:5]")
   (calcule-poids-des-granules))

(defrule YADERULE::idm45712587650192 "sitting rule"
   (declare (salience ?*salience-idm45712587650192*))
   (contexte (indice ?indice) (pile-contextes ?contexte $?))
   ?gr-idm45712587661344 <- (granule (ident ?idm45712587661344) (indice ?indice-idm45712587661344&?indice) (lconcept sit $?))
   (not (used (ident ?idm45712587661344)))
   (not (fired ?indice idm45712587650192 =(string-to-field (getNumber ?idm45712587661344))))
   (poids-granule (ident ?idm45712587661344) (poids ?idm45712587661344-poids))
   (test (bind ?*salience-idm45712587650192* (+ 400 1 ?idm45712587661344-poids)))
   =>
   (assert (fired ?indice idm45712587650192 (string-to-field (getNumber ?idm45712587661344))))
   (bind ?liste-id (create$ (string-to-field (getNumber ?idm45712587661344))))
   (writeLog (format nil "### Standalone rule (sitting rule) granules=(%s) salience=%d id=%s" (implode$ ?liste-id) ?*salience-idm45712587650192* idm45712587650192))
   (repondre "Yeah. [nao:sitdown]")
   (calcule-poids-des-granules))

(defrule YADERULE::idm45712587616960 "standing rule"
   (declare (salience ?*salience-idm45712587616960*))
   (contexte (indice ?indice) (pile-contextes ?contexte $?))
   ?gr-idm45712587614000 <- (granule (ident ?idm45712587614000) (indice ?indice-idm45712587614000&?indice) (lconcept stand $?))
   (not (used (ident ?idm45712587614000)))
   (not (fired ?indice idm45712587616960 =(string-to-field (getNumber ?idm45712587614000))))
   (poids-granule (ident ?idm45712587614000) (poids ?idm45712587614000-poids))
   (test (bind ?*salience-idm45712587616960* (+ 400 1 ?idm45712587614000-poids)))
   =>
   (assert (fired ?indice idm45712587616960 (string-to-field (getNumber ?idm45712587614000))))
   (bind ?liste-id (create$ (string-to-field (getNumber ?idm45712587614000))))
   (writeLog (format nil "### Standalone rule (standing rule) granules=(%s) salience=%d id=%s" (implode$ ?liste-id) ?*salience-idm45712587616960* idm45712587616960))
   (repondre "Yeah. [nao:standup]")
   (calcule-poids-des-granules))

(defrule YADERULE::idm45712587612032 "move forward rule"
   (declare (salience ?*salience-idm45712587612032*))
   (contexte (indice ?indice) (pile-contextes ?contexte $?))
   ?gr-idm45712587609072 <- (granule (ident ?idm45712587609072) (indice ?indice-idm45712587609072&?indice) (lconcept forward $?))
   (not (used (ident ?idm45712587609072)))
   (not (fired ?indice idm45712587612032 =(string-to-field (getNumber ?idm45712587609072))))
   (poids-granule (ident ?idm45712587609072) (poids ?idm45712587609072-poids))
   (test (bind ?*salience-idm45712587612032* (+ 400 1 ?idm45712587609072-poids)))
   =>
   (assert (fired ?indice idm45712587612032 (string-to-field (getNumber ?idm45712587609072))))
   (bind ?liste-id (create$ (string-to-field (getNumber ?idm45712587609072))))
   (writeLog (format nil "### Standalone rule (move forward rule) granules=(%s) salience=%d id=%s" (implode$ ?liste-id) ?*salience-idm45712587612032* idm45712587612032))
   (repondre "okay, let's go.[nao:walkForward]")
   (calcule-poids-des-granules))

(defrule YADERULE::idm45712587607088 "move back rule"
   (declare (salience ?*salience-idm45712587607088*))
   (contexte (indice ?indice) (pile-contextes ?contexte $?))
   ?gr-idm45712587604128 <- (granule (ident ?idm45712587604128) (indice ?indice-idm45712587604128&?indice) (lconcept backward $?))
   (not (used (ident ?idm45712587604128)))
   (not (fired ?indice idm45712587607088 =(string-to-field (getNumber ?idm45712587604128))))
   (poids-granule (ident ?idm45712587604128) (poids ?idm45712587604128-poids))
   (test (bind ?*salience-idm45712587607088* (+ 400 1 ?idm45712587604128-poids)))
   =>
   (assert (fired ?indice idm45712587607088 (string-to-field (getNumber ?idm45712587604128))))
   (bind ?liste-id (create$ (string-to-field (getNumber ?idm45712587604128))))
   (writeLog (format nil "### Standalone rule (move back rule) granules=(%s) salience=%d id=%s" (implode$ ?liste-id) ?*salience-idm45712587607088* idm45712587607088))
   (repondre "okay. [nao:walkBackward]")
   (calcule-poids-des-granules))

(defrule YADERULE::idm45712587602144 "move left rule"
   (declare (salience ?*salience-idm45712587602144*))
   (contexte (indice ?indice) (pile-contextes ?contexte $?))
   ?gr-idm45712587599184 <- (granule (ident ?idm45712587599184) (indice ?indice-idm45712587599184&?indice) (lconcept moveleft $?))
   (not (used (ident ?idm45712587599184)))
   (not (fired ?indice idm45712587602144 =(string-to-field (getNumber ?idm45712587599184))))
   (poids-granule (ident ?idm45712587599184) (poids ?idm45712587599184-poids))
   (test (bind ?*salience-idm45712587602144* (+ 400 1 ?idm45712587599184-poids)))
   =>
   (assert (fired ?indice idm45712587602144 (string-to-field (getNumber ?idm45712587599184))))
   (bind ?liste-id (create$ (string-to-field (getNumber ?idm45712587599184))))
   (writeLog (format nil "### Standalone rule (move left rule) granules=(%s) salience=%d id=%s" (implode$ ?liste-id) ?*salience-idm45712587602144* idm45712587602144))
   (repondre "Yeah sure. [nao:walkLeft]")
   (calcule-poids-des-granules))

(defrule YADERULE::idm45712587597200 "move right rule"
   (declare (salience ?*salience-idm45712587597200*))
   (contexte (indice ?indice) (pile-contextes ?contexte $?))
   ?gr-idm45712587594240 <- (granule (ident ?idm45712587594240) (indice ?indice-idm45712587594240&?indice) (lconcept moveright $?))
   (not (used (ident ?idm45712587594240)))
   (not (fired ?indice idm45712587597200 =(string-to-field (getNumber ?idm45712587594240))))
   (poids-granule (ident ?idm45712587594240) (poids ?idm45712587594240-poids))
   (test (bind ?*salience-idm45712587597200* (+ 400 1 ?idm45712587594240-poids)))
   =>
   (assert (fired ?indice idm45712587597200 (string-to-field (getNumber ?idm45712587594240))))
   (bind ?liste-id (create$ (string-to-field (getNumber ?idm45712587594240))))
   (writeLog (format nil "### Standalone rule (move right rule) granules=(%s) salience=%d id=%s" (implode$ ?liste-id) ?*salience-idm45712587597200* idm45712587597200))
   (repondre "Yeah sure. [nao:walkRight]")
   (calcule-poids-des-granules))

(defrule YADERULE::idm45712587592256 "turn left rule"
   (declare (salience ?*salience-idm45712587592256*))
   (contexte (indice ?indice) (pile-contextes ?contexte $?))
   ?gr-idm45712587589296 <- (granule (ident ?idm45712587589296) (indice ?indice-idm45712587589296&?indice) (lconcept turnleft $?))
   (not (used (ident ?idm45712587589296)))
   (not (fired ?indice idm45712587592256 =(string-to-field (getNumber ?idm45712587589296))))
   (poids-granule (ident ?idm45712587589296) (poids ?idm45712587589296-poids))
   (test (bind ?*salience-idm45712587592256* (+ 400 1 ?idm45712587589296-poids)))
   =>
   (assert (fired ?indice idm45712587592256 (string-to-field (getNumber ?idm45712587589296))))
   (bind ?liste-id (create$ (string-to-field (getNumber ?idm45712587589296))))
   (writeLog (format nil "### Standalone rule (turn left rule) granules=(%s) salience=%d id=%s" (implode$ ?liste-id) ?*salience-idm45712587592256* idm45712587592256))
   (repondre "Yeah sure. [nao:turnLeft]")
   (calcule-poids-des-granules))

(defrule YADERULE::idm45712587587376 "turn right rule"
   (declare (salience ?*salience-idm45712587587376*))
   (contexte (indice ?indice) (pile-contextes ?contexte $?))
   ?gr-idm45712587584416 <- (granule (ident ?idm45712587584416) (indice ?indice-idm45712587584416&?indice) (lconcept turnright $?))
   (not (used (ident ?idm45712587584416)))
   (not (fired ?indice idm45712587587376 =(string-to-field (getNumber ?idm45712587584416))))
   (poids-granule (ident ?idm45712587584416) (poids ?idm45712587584416-poids))
   (test (bind ?*salience-idm45712587587376* (+ 400 1 ?idm45712587584416-poids)))
   =>
   (assert (fired ?indice idm45712587587376 (string-to-field (getNumber ?idm45712587584416))))
   (bind ?liste-id (create$ (string-to-field (getNumber ?idm45712587584416))))
   (writeLog (format nil "### Standalone rule (turn right rule) granules=(%s) salience=%d id=%s" (implode$ ?liste-id) ?*salience-idm45712587587376* idm45712587587376))
   (repondre "Yeah sure. [nao:turnRight]")
   (calcule-poids-des-granules))

(defrule YADERULE::idm45712587582432 "turn around rule"
   (declare (salience ?*salience-idm45712587582432*))
   (contexte (indice ?indice) (pile-contextes ?contexte $?))
   ?gr-idm45712587579472 <- (granule (ident ?idm45712587579472) (indice ?indice-idm45712587579472&?indice) (lconcept turnaround $?))
   (not (used (ident ?idm45712587579472)))
   (not (fired ?indice idm45712587582432 =(string-to-field (getNumber ?idm45712587579472))))
   (poids-granule (ident ?idm45712587579472) (poids ?idm45712587579472-poids))
   (test (bind ?*salience-idm45712587582432* (+ 400 1 ?idm45712587579472-poids)))
   =>
   (assert (fired ?indice idm45712587582432 (string-to-field (getNumber ?idm45712587579472))))
   (bind ?liste-id (create$ (string-to-field (getNumber ?idm45712587579472))))
   (writeLog (format nil "### Standalone rule (turn around rule) granules=(%s) salience=%d id=%s" (implode$ ?liste-id) ?*salience-idm45712587582432* idm45712587582432))
   (repondre "Yeah sure. [nao:turnAround]")
   (calcule-poids-des-granules))

;; =============================================================================
;; Fin du fichier
